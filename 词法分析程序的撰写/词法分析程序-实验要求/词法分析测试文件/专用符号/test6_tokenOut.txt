LINE		WORD		TYPE
1		class		KEYWORD
1		WhatHappen		IDENTIFIER
1		{		SEPARATOR
2		public		KEYWORD
2		static		KEYWORD
2		void		KEYWORD
2		main		KEYWORD
2		(		SEPARATOR
2		String		KEYWORD
2		[		SEPARATOR
2		]		SEPARATOR
2		args		IDENTIFIER
2		)		SEPARATOR
2		{		SEPARATOR
3		MyClient		IDENTIFIER
3		mc		IDENTIFIER
3		;		SEPARATOR
4		int		KEYWORD
4		handle		IDENTIFIER
4		;		SEPARATOR
6		mc		IDENTIFIER
6		=		OPERATOR
6		new		KEYWORD
6		MyClient		IDENTIFIER
6		(		SEPARATOR
6		)		SEPARATOR
6		;		SEPARATOR
7		while		KEYWORD
7		(		SEPARATOR
7		!		OPERATOR
7		false		KEYWORD
7		)		SEPARATOR
7		{		SEPARATOR
8		handle		IDENTIFIER
8		=		OPERATOR
8		mc		IDENTIFIER
8		.		OPERATOR
8		start		IDENTIFIER
8		(		SEPARATOR
8		10		INTEGERLITERAL
8		,		SEPARATOR
8		10		INTEGERLITERAL
8		)		SEPARATOR
8		;		SEPARATOR
9		}		SEPARATOR
10		}		SEPARATOR
11		}		SEPARATOR
13		class		KEYWORD
13		Client		IDENTIFIER
13		{		SEPARATOR
14		int		KEYWORD
14		in		IDENTIFIER
14		;		SEPARATOR
15		int		KEYWORD
15		out		IDENTIFIER
15		;		SEPARATOR
16		int		KEYWORD
16		[		SEPARATOR
16		]		SEPARATOR
16		messagelist		IDENTIFIER
16		;		SEPARATOR
17		int		KEYWORD
17		index		IDENTIFIER
17		;		SEPARATOR
18		public		KEYWORD
18		boolean		KEYWORD
18		init		IDENTIFIER
18		(		SEPARATOR
18		)		SEPARATOR
18		{		SEPARATOR
19		index		IDENTIFIER
19		=		OPERATOR
19		0		INTEGERLITERAL
19		;		SEPARATOR
20		messagelist		IDENTIFIER
20		=		OPERATOR
20		new		KEYWORD
20		int		KEYWORD
20		[		SEPARATOR
20		10		INTEGERLITERAL
20		]		SEPARATOR
20		;		SEPARATOR
21		in		IDENTIFIER
21		=		OPERATOR
21		0		INTEGERLITERAL
21		;		SEPARATOR
22		out		IDENTIFIER
22		=		OPERATOR
22		0		INTEGERLITERAL
22		;		SEPARATOR
23		return		KEYWORD
23		true		KEYWORD
23		;		SEPARATOR
24		}		SEPARATOR
25		public		KEYWORD
25		int		KEYWORD
25		run		IDENTIFIER
25		(		SEPARATOR
25		int		KEYWORD
25		host		IDENTIFIER
25		,		SEPARATOR
25		int		KEYWORD
25		port		IDENTIFIER
25		)		SEPARATOR
25		{		SEPARATOR
26		int		KEYWORD
26		handle		IDENTIFIER
26		;		SEPARATOR
27		handle		IDENTIFIER
27		=		OPERATOR
27		this		KEYWORD
27		.		OPERATOR
27		Juggling		IDENTIFIER
27		(		SEPARATOR
27		)		SEPARATOR
27		;		SEPARATOR
29		}		SEPARATOR
31		public		KEYWORD
31		int		KEYWORD
31		getMsg		IDENTIFIER
31		(		SEPARATOR
31		)		SEPARATOR
31		{		SEPARATOR
32		int		KEYWORD
32		tmp		IDENTIFIER
32		;		SEPARATOR
33		tmp		IDENTIFIER
33		=		OPERATOR
33		messagelist		IDENTIFIER
33		.		OPERATOR
33		length		KEYWORD
33		;		SEPARATOR
34		if		KEYWORD
34		(		SEPARATOR
34		this		KEYWORD
34		.		OPERATOR
34		isVoid		IDENTIFIER
34		(		SEPARATOR
34		)		SEPARATOR
34		)		SEPARATOR
34		{		SEPARATOR
35		tmp		IDENTIFIER
35		=		OPERATOR
35		tmp		IDENTIFIER
35		-		OPERATOR
35		1		INTEGERLITERAL
35		;		SEPARATOR
36		}		SEPARATOR
37		else		KEYWORD
37		{		SEPARATOR
38		tmp		IDENTIFIER
38		=		OPERATOR
38		tmp		IDENTIFIER
38		*		OPERATOR
38		2		INTEGERLITERAL
38		;		SEPARATOR
39		}		SEPARATOR
40		if		KEYWORD
40		(		SEPARATOR
40		index		IDENTIFIER
40		<		OPERATOR
40		10		INTEGERLITERAL
40		)		SEPARATOR
40		{		SEPARATOR
41		messagelist		IDENTIFIER
41		[		SEPARATOR
41		index		IDENTIFIER
41		]		SEPARATOR
41		=		OPERATOR
41		tmp		IDENTIFIER
41		;		SEPARATOR
42		index		IDENTIFIER
42		=		OPERATOR
42		index		IDENTIFIER
42		+		OPERATOR
42		1		INTEGERLITERAL
42		;		SEPARATOR
43		}		SEPARATOR
44		else		KEYWORD
44		{		SEPARATOR
45		index		IDENTIFIER
45		=		OPERATOR
45		0		INTEGERLITERAL
45		;		SEPARATOR
46		}		SEPARATOR
47		return		KEYWORD
47		tmp		IDENTIFIER
47		;		SEPARATOR
48		}		SEPARATOR
50		public		KEYWORD
50		boolean		KEYWORD
50		isVoid		IDENTIFIER
50		(		SEPARATOR
50		)		SEPARATOR
50		{		SEPARATOR
51		boolean		KEYWORD
51		flag		IDENTIFIER
51		;		SEPARATOR
52		if		KEYWORD
52		(		SEPARATOR
52		messagelist		IDENTIFIER
52		.		OPERATOR
52		length		KEYWORD
52		>		ERROR: Don't known the word
52		0		INTEGERLITERAL
52		)		SEPARATOR
52		{		SEPARATOR
53		flag		IDENTIFIER
53		=		OPERATOR
53		false		KEYWORD
53		;		SEPARATOR
54		}		SEPARATOR
55		else		KEYWORD
55		{		SEPARATOR
56		flag		IDENTIFIER
56		=		OPERATOR
56		true		KEYWORD
56		;		SEPARATOR
57		}		SEPARATOR
58		return		KEYWORD
58		flag		IDENTIFIER
58		;		SEPARATOR
59		}		SEPARATOR
61		public		KEYWORD
61		int		KEYWORD
61		Juggling		IDENTIFIER
61		(		SEPARATOR
61		)		SEPARATOR
61		{		SEPARATOR
62		boolean		KEYWORD
62		t		IDENTIFIER
62		;		SEPARATOR
63		int		KEYWORD
63		tmp1		IDENTIFIER
63		;		SEPARATOR
64		int		KEYWORD
64		tmp2		IDENTIFIER
64		;		SEPARATOR
65		int		KEYWORD
65		tmp3		IDENTIFIER
65		;		SEPARATOR
66		tmp1		IDENTIFIER
66		=		OPERATOR
66		2		INTEGERLITERAL
66		;		SEPARATOR
67		tmp2		IDENTIFIER
67		=		OPERATOR
67		3		INTEGERLITERAL
67		;		SEPARATOR
68		tmp3		IDENTIFIER
68		=		OPERATOR
68		4		INTEGERLITERAL
68		;		SEPARATOR
69		while		KEYWORD
69		(		SEPARATOR
69		(		SEPARATOR
69		tmp2		IDENTIFIER
69		<		OPERATOR
69		tmp3		IDENTIFIER
69		)		SEPARATOR
69		&&		OPERATOR
69		(		SEPARATOR
69		tmp1		IDENTIFIER
69		<		OPERATOR
69		tmp2		IDENTIFIER
69		)		SEPARATOR
69		)		SEPARATOR
69		{		SEPARATOR
70		tmp1		IDENTIFIER
70		=		OPERATOR
70		tmp3		IDENTIFIER
70		-		OPERATOR
70		tmp2		IDENTIFIER
70		;		SEPARATOR
71		tmp2		IDENTIFIER
71		=		OPERATOR
71		tmp2		IDENTIFIER
71		-		OPERATOR
71		tmp1		IDENTIFIER
71		;		SEPARATOR
72		tmp3		IDENTIFIER
72		=		OPERATOR
72		tmp2		IDENTIFIER
72		*		OPERATOR
72		tmp1		IDENTIFIER
72		;		SEPARATOR
73		t		IDENTIFIER
73		=		OPERATOR
73		this		KEYWORD
73		.		OPERATOR
73		HolyLight		IDENTIFIER
73		(		SEPARATOR
73		)		SEPARATOR
73		;		SEPARATOR
74		}		SEPARATOR
75		return		KEYWORD
75		(		SEPARATOR
75		tmp1		IDENTIFIER
75		*		OPERATOR
75		tmp2		IDENTIFIER
75		+		OPERATOR
75		tmp3		IDENTIFIER
75		)		SEPARATOR
75		*		OPERATOR
75		messagelist		IDENTIFIER
75		.		OPERATOR
75		length		KEYWORD
75		;		SEPARATOR
76		}		SEPARATOR
79		public		KEYWORD
79		boolean		KEYWORD
79		HolyLight		IDENTIFIER
79		(		SEPARATOR
79		)		SEPARATOR
79		{		SEPARATOR
80		in		IDENTIFIER
80		=		OPERATOR
80		in		IDENTIFIER
80		+		OPERATOR
80		1		INTEGERLITERAL
80		;		SEPARATOR
81		out		IDENTIFIER
81		=		OPERATOR
81		out		IDENTIFIER
81		-		OPERATOR
81		1		INTEGERLITERAL
81		;		SEPARATOR
82		System.out.println		KEYWORD
82		(		SEPARATOR
82		false		KEYWORD
82		)		SEPARATOR
82		;		SEPARATOR
83		}		SEPARATOR
84		}		SEPARATOR
86		class		KEYWORD
86		MyClient		IDENTIFIER
86		extend		IDENTIFIER
86		Client		IDENTIFIER
86		{		SEPARATOR
88		public		KEYWORD
88		int		KEYWORD
88		start		IDENTIFIER
88		(		SEPARATOR
88		int		KEYWORD
88		host		IDENTIFIER
88		,		SEPARATOR
88		int		KEYWORD
88		port		IDENTIFIER
88		)		SEPARATOR
88		{		SEPARATOR
89		int		KEYWORD
89		handle		IDENTIFIER
89		;		SEPARATOR
90		handle		IDENTIFIER
90		=		OPERATOR
90		this		KEYWORD
90		.		OPERATOR
90		run		IDENTIFIER
90		(		SEPARATOR
90		)		SEPARATOR
91		return		KEYWORD
91		handle		IDENTIFIER
91		;		SEPARATOR
92		}		SEPARATOR
93		}		SEPARATOR
